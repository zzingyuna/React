{"ast":null,"code":"import _classCallCheck from \"D:\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\hello-world\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nvar user = {\n  firstName: 'Harper',\n  lastName: 'Perez'\n};\nvar element = React.createElement('h1', {\n  className: 'greeting'\n}, 'Hello, world!');\n\nfunction getGreeting(user) {\n  if (user) {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Hello, \", formatName(user), \"!\");\n  }\n\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Hello, Stranger.\");\n}\n\nReactDOM.render(element, document.getElementById('root3'));\n\nvar Toggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Toggle, _React$Component);\n\n  function Toggle(props) {\n    var _this;\n\n    _classCallCheck(this, Toggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Toggle).call(this, props));\n    _this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Toggle, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState(function (state) {\n        return {\n          isToggleOn: !state.isToggleOn\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.isToggleOn ? 'ON' : 'OFF');\n    }\n  }]);\n\n  return Toggle;\n}(React.Component);\n\nReactDOM.render(React.createElement(Toggle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), document.getElementById('root3'));\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), document.getElementById('root'));\nReactDOM.render(React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, \"Hello, world!\"), document.getElementById('root2')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["D:\\hello-world\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","formatName","user","firstName","lastName","element","createElement","className","getGreeting","render","document","getElementById","Toggle","props","state","isToggleOn","handleClick","bind","setState","Component","unregister"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOA,IAAI,CAACC,SAAL,GAAiB,GAAjB,GAAuBD,IAAI,CAACE,QAAnC;AACD;;AAED,IAAMF,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,QADA;AAEXC,EAAAA,QAAQ,EAAE;AAFC,CAAb;AAKA,IAAMC,OAAO,GAAGR,KAAK,CAACS,aAAN,CACd,IADc,EAEd;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAFc,EAGd,eAHc,CAAhB;;AAMA,SAASC,WAAT,CAAqBN,IAArB,EAA2B;AACzB,MAAIA,IAAJ,EAAU;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYD,UAAU,CAACC,IAAD,CAAtB,MAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAGDJ,QAAQ,CAACW,MAAT,CACEJ,OADF,EAEEK,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAFF;;IAKMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAIjB;;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AALiB;AAMlB;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc,UAAAJ,KAAK;AAAA,eAAK;AACtBC,UAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,SAAL;AAAA,OAAnB;AAGD;;;6BAEQ;AACP,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,CADF;AAKD;;;;EArBkBlB,KAAK,CAACsB,S;;AAwB3BrB,QAAQ,CAACW,MAAT,CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAFF;AAKFb,QAAQ,CAACW,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACAb,QAAQ,CAACW,MAAT,CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAhB,EACIC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CADJ,E,CAGA;AACA;AACA;;AACAX,aAAa,CAACoB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction formatName(user) {\n    return user.firstName + ' ' + user.lastName;\n  }\n  \n  const user = {\n    firstName: 'Harper',\n    lastName: 'Perez'\n  };\n  \n  const element = React.createElement(\n    'h1',\n    {className: 'greeting'},\n    'Hello, world!'\n  );\n\n  function getGreeting(user) {\n    if (user) {\n      return <h1>Hello, {formatName(user)}!</h1>;\n    }\n    return <h1>Hello, Stranger.</h1>;\n  }\n\n  \n  ReactDOM.render(\n    element,\n    document.getElementById('root3')\n  );\n  \n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {isToggleOn: true};\n  \n      // This binding is necessary to make `this` work in the callback\n      this.handleClick = this.handleClick.bind(this);\n    }\n  \n    handleClick() {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n    }\n  \n    render() {\n      return (\n        <button onClick={this.handleClick}>\n          {this.state.isToggleOn ? 'ON' : 'OFF'}\n        </button>\n      );\n    }\n  }\n  \n  ReactDOM.render(\n    <Toggle />,\n    document.getElementById('root3')\n  );\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<h1>Hello, world!</h1>,\n    document.getElementById('root2'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}